apiVersion: v1
kind: ConfigMap
metadata:
  name: monitor-client-conf
  namespace: monitor-uat
data:
  config.toml: |
    [solana]
    rpc_url="https://api.devnet.solana.com"
    ws_url="wss://api.devnet.solana.com"
    keypair_path="/secret/id.json"
    commitment="confirmed"
    network="devnet"
    
    [oracle]
    config_name="fearandgreed"
    config_description="FEAR&GREED. The market that we build, unspeakable, enslaves us."
    total_phase=2
    authority_pubkey="42taRyQCVHSgeHynMDkomRSRQ26rZ5Ygm2pq7QGmDwnP"
    interval=30
    program_id="12YQKMkv1xZ1B4gwVMiGTcYvY1z6TpdFvyAWyjhuC63c"
    
    [event]
    program_id="6QDRmHTnVZy7PPDKifFjK6V9Fjm7KSK4cqdNFk3kitvj"
    vision_mining_admin_pubkey="9BCXkJbiftuJCf8mydw7znBr3HmsAydgikYkkPwcqbWG"
    
    [market]
    hourly_create=true
    daily_create=true
    
    [metadata]
    ft_token_name="moni"
    ft_token_symbol="MONI"
    ft_token_url="demonitors.xyz"
    ft_token_decimal=9
    sbt_token_name="Protyl"
    sbt_token_symbol="Protyl"
    sbt_token_url="demonitors.xyz"
    event_metadata_url="demonitors.xyz"
    fear_sbt_token_name="Pale Gaze"
    fear_sbt_token_symbol="PGM"
    fear_sbt_token_url="https://arweave.net/b6QECqdO41Lo7udBSN13B6fSbpdPB_xuqo6tfJmtfZo"
    greed_sbt_token_name="Great Swallow"
    greed_sbt_token_symbol="GSM"
    greed_sbt_token_url="https://arweave.net/CC4RfBUF_6G-10hdyPnXNPe87HLnYFtP_nw3KFaC7mM"

    
    [tokenomics]
    vision_mining = 10000000
    event_mining = 60000000
    event_prize = 30
    
    [api]
    port=8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitor-client
  namespace: monitor-uat
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitor-client
  template:
    metadata:
      labels:
        app: monitor-client
    spec:
      containers:
        - name: monitor-client
          image: 407324771176.dkr.ecr.us-east-2.amazonaws.com/monitors-client:latest
          imagePullPolicy: Always
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 30
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 30
          resources:
            limits:
              memory: "800M"
              cpu: "0.2"
            requests:
              memory: "50M"
              cpu: "0.1"
          volumeMounts:
            - name: "config"
              mountPath: "/config"
            - name: "wallet-secret"
              mountPath: "/secret"
              readOnly: true
          ports:
            - containerPort: 8080
      volumes:
        - name: config
          configMap:
            name: monitor-client-conf
            items:
              - key: config.toml
                path: config.toml
        - name: wallet-secret
          secret:
            secretName: wallet-secret

---
apiVersion: v1
kind: Service
metadata:
  name: monitor-client-svc
  namespace: monitor-uat
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: monitor-client
  ports:
    - port: 8080
      protocol: TCP
      name: port8080

#---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  annotations:
#    nginx.ingress.kubernetes.io/cors-allow-methods: GET, POST, OPTIONS
#    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
#    nginx.ingress.kubernetes.io/enable-cors: "true"
#    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization, Content-Length, X-CSRF-Token, Token,session,X_Requested_With,Accept, Origin, Host, Connection, Accept-Encoding, Accept-Language,DNT, X-CustomHeader, Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type, Pragma, token, X-AppId, X-Signature, X-Signature-Method"
#  name: monitor-client
#  namespace: monitor-uat
#spec:
#  ingressClassName: nginx
#  rules:
#    - host: api.demonitors.xyz
#      http:
#        paths:
#          - backend:
#              service:
#                name: monitor-client-svc
#                port:
#                  number: 8080
#            path: /api/v1/
#            pathType: ImplementationSpecific
#    - host: api-vision.demonitors.xyz
#      http:
#        paths:
#          - backend:
#              service:
#                name: monitors-vision-mining-backend-svc
#                port:
#                  number: 3000
#            path: /api/v1/
#            pathType: ImplementationSpecific
#    - host: www.demonitors.xyz
#      http:
#        paths:
#          - backend:
#              service:
#                name: monitors-frontend-svc
#                port:
#                  number: 80
#            path: /
#            pathType: ImplementationSpecific
#    - host: demonitors.xyz
#      http:
#        paths:
#          - backend:
#              service:
#                name: monitors-frontend-svc
#                port:
#                  number: 80
#            path: /
#            pathType: ImplementationSpecific